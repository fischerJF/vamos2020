/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 22 09:52:37 BRT 2019
 */

package jogador;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import piece.Piece;
import piece.PieceType;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class AI_Player_ESTest extends AI_Player_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AI_Player aI_Player0 = new AI_Player(0);
      Piece piece0 = new Piece(1, 0, 0);
      Piece piece1 = new Piece(0, 0, 0);
      // Undeclared exception!
      try { 
        aI_Player0.addPiece(piece1);
//        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jogador.AI_Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AI_Player aI_Player0 = new AI_Player(1);
      int int0 = aI_Player0.getTeam();
//      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AI_Player aI_Player0 = new AI_Player((-1));
      int int0 = aI_Player0.getTeam();
//      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = 0;
      AI_Player aI_Player0 = new AI_Player(0);
      PieceType pieceType0 = PieceType.KING;
      aI_Player0.getPieceScore(pieceType0);
      aI_Player0.getScore();
      aI_Player0.getPositionWeight();
      // Undeclared exception!
      try { 
        aI_Player0.addPiece((Piece) null);
//        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jogador.AI_Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AI_Player aI_Player0 = new AI_Player(0);
      Piece piece0 = new Piece(0, 0, 0);
      // Undeclared exception!
      try { 
        aI_Player0.addPiece(piece0);
//        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jogador.AI_Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AI_Player aI_Player0 = new AI_Player((-4273));
      Piece piece0 = new Piece(2259, 2259, 2259);
      Piece piece1 = new Piece(piece0);
      // Undeclared exception!
      try { 
        aI_Player0.removePiece(piece1);
//        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jogador.AI_Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AI_Player aI_Player0 = new AI_Player(3023);
      Piece piece0 = new Piece(3023, 3023, 3023);
      PieceType pieceType0 = PieceType.QUEEN;
      PieceType pieceType1 = PieceType.ROOK;
      aI_Player0.getPieceScore(pieceType1);
      piece0.setType(pieceType0);
      Piece piece1 = new Piece(piece0);
      piece1.deletePiece(0, 0);
      // Undeclared exception!
      try { 
        aI_Player0.addPiece(piece1);
  //      fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jogador.AI_Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AI_Player aI_Player0 = new AI_Player(0);
      Piece piece0 = new Piece(0, 0, 0);
      // Undeclared exception!
      try { 
//        aI_Player0.addPiece((-1), piece0);
//        fail("Expecting exception: NullPointerException");
//      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jogador.AI_Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AI_Player aI_Player0 = new AI_Player(0);
      PieceType pieceType0 = PieceType.QUEEN;
      int int0 = aI_Player0.getPieceScore(pieceType0);
      assertEquals(90, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AI_Player aI_Player0 = new AI_Player(0);
      PieceType pieceType0 = PieceType.KNIGHT;
      int int0 = aI_Player0.getPieceScore(pieceType0);
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AI_Player aI_Player0 = new AI_Player(0);
      PieceType pieceType0 = PieceType.BISHOP;
      int int0 = aI_Player0.getPieceScore(pieceType0);
      assertEquals(40, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AI_Player aI_Player0 = new AI_Player(5);
      aI_Player0.getPlayerPieces();
      aI_Player0.setPiecesKilled();
      aI_Player0.getScore();
      // Undeclared exception!
      try { 
        aI_Player0.getPieceScore((PieceType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jogador.AI_Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AI_Player aI_Player0 = new AI_Player(0);
      int int0 = aI_Player0.getTeam();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AI_Player aI_Player0 = new AI_Player(0);
      aI_Player0.setTeam(0);
      assertEquals(0, aI_Player0.getTeam());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AI_Player aI_Player0 = new AI_Player(0);
      aI_Player0.setScore();
      int int0 = aI_Player0.getScore();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AI_Player aI_Player0 = new AI_Player(0);
      Piece piece0 = new Piece(0, 0, 0);
      // Undeclared exception!
      try { 
        aI_Player0.addPiece(0, piece0);
//        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jogador.AI_Player", e);
      }
  }
}
