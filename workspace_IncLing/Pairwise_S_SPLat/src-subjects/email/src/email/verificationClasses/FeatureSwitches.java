package email.verificationClasses;

import splat.EmailVariables;

public class FeatureSwitches {
/*
 * DO NOT EDIT! THIS FILE IS AUTOGENERATED BY fstcomp 
 */

	/*
public static String getSelectedFeaturesAsNames() {
StringBuilder sb = new StringBuilder();
	if (EmailTEST.__SELECTED_FEATURE_sign) sb.append("sign;");
	if (EmailTEST.__SELECTED_FEATURE_decrypt) sb.append("decrypt;");
	if (EmailTEST.__SELECTED_FEATURE_forward) sb.append("forward;");
	if (EmailTEST.__SELECTED_FEATURE_keys) sb.append("keys;");
	if (EmailTEST.__SELECTED_FEATURE_verify) sb.append("verify;");
	if (EmailTEST.__SELECTED_FEATURE_encrypt) sb.append("encrypt;");
	if (EmailTEST.__SELECTED_FEATURE_addressbook) sb.append("addressbook;");
	if (EmailTEST.__SELECTED_FEATURE_base) sb.append("base;");
	if (EmailTEST.__SELECTED_FEATURE_autoresponder) sb.append("autoresponder;");
return sb.toString();
} */
	
	/*
public static void select_features() {
	EmailTEST.__SELECTED_FEATURE_sign = verificationClasses.SPLModelChecker.getBoolean();
	EmailTEST.__SELECTED_FEATURE_decrypt = verificationClasses.SPLModelChecker.getBoolean();
	EmailTEST.__SELECTED_FEATURE_forward = verificationClasses.SPLModelChecker.getBoolean();
	EmailTEST.__SELECTED_FEATURE_keys = verificationClasses.SPLModelChecker.getBoolean();
	EmailTEST.__SELECTED_FEATURE_verify = verificationClasses.SPLModelChecker.getBoolean();
	EmailTEST.__SELECTED_FEATURE_encrypt = verificationClasses.SPLModelChecker.getBoolean();
	EmailTEST.__SELECTED_FEATURE_addressbook = verificationClasses.SPLModelChecker.getBoolean();
	EmailTEST.__SELECTED_FEATURE_base = verificationClasses.SPLModelChecker.getBoolean();
	EmailTEST.__SELECTED_FEATURE_autoresponder = verificationClasses.SPLModelChecker.getBoolean();
}
 */
/*
	public static boolean __GUIDSL_ROOT_PRODUCTION;

public static void select_helpers() {
	__GUIDSL_ROOT_PRODUCTION = true;
}

public static boolean valid_product() {
	if ((( !EmailTEST.__SELECTED_FEATURE_encrypt || EmailTEST.__SELECTED_FEATURE_decrypt ) && ( !EmailTEST.__SELECTED_FEATURE_decrypt || EmailTEST.__SELECTED_FEATURE_encrypt )) && ( !EmailTEST.__SELECTED_FEATURE_encrypt || EmailTEST.__SELECTED_FEATURE_keys ) && (( !EmailTEST.__SELECTED_FEATURE_sign || EmailTEST.__SELECTED_FEATURE_verify ) && ( !EmailTEST.__SELECTED_FEATURE_verify || EmailTEST.__SELECTED_FEATURE_sign )) && ( !EmailTEST.__SELECTED_FEATURE_sign || EmailTEST.__SELECTED_FEATURE_keys ) && ( EmailTEST.__SELECTED_FEATURE_base ))
		return true;
	else
		return false;
} */
}